import and from "./and.js";
import or from "./or.js";
export const durabilityLT1 = obj => (obj === null || obj === void 0 ? void 0 : obj.durability) < 1;
export const hasCollided = obj => obj.hasCollidedWith.length > 0;
export const hasCollidedMultiple = obj => obj.hasCollidedWith.length > 1;
export const hasCollidedWith = objectType => obj => obj.hasCollidedWith.filter(type => type === objectType) > 0;
export const hasProperties = (...props) => obj => props.reduce((l, r) => l && r in obj, true);
export const isCollidable = hasProperties("hasCollidedWith", "radius");
export const isMoveable = hasProperties("velocity", "position");
export const hasDurability = hasProperties("durability");
export const isRotatable = hasProperties("rotation");
export const hasTTL = hasProperties("ttl");
export const hasAcceleration = hasProperties("acceleration");
export const hasClones = and(hasProperties("position"), obj => obj.position.length > 1);
export const isObject = (...types) => obj => types.reduce((l, r) => l || obj.type === r, false);
export const isProjectile = isObject(2);
export const isPlayer = isObject(1);
export const isAsteroid = isObject(0);
export const isOwner = ownerType => obj => obj.owner === ownerType;
export const isOwnedByPlayer = isOwner(1);
export const isPlayerProjectile = and(isProjectile, isOwnedByPlayer);
export const isAsteroidWithNoDurability = and(durabilityLT1, isAsteroid);
export const isRotatingCounterclockwise = object => object.angularVelocity < 0;
export const isRotatingClockwise = object => object.angularVelocity > 0;
export const isAccelerating = object => object.acceleration > 0;
export const isOre = object => object.type === 5;
export const isOrePlayerOrProjectile = [isPlayer, isProjectile, isOre].reduce(or);
export const isCloneTrigger = isObject(6);
export const isDespawnTrigger = isObject(7);
export const hasPlayer = list => list.filter(isPlayer).length > 0;
//# sourceMappingURL=conditions.js.map